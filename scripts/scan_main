#!/bin/bash

DEPSLIST=""
FILELIST=""

function remove_dups {
    awk '{
        while(++i<=NF)
            printf (!a[$i]++) ? $i FS : "";
            i=split("",a);
            print ""
        }'
}

# Gets local includes
function get_deps {
    # if not in list of dependencies
    if ! [[ $DEPSLIST =~ $1 ]]; then

        DEPSLIST="$DEPSLIST $1"

        # Get a list of dependencies for this file
        DEPS=$(grep -Po '(?<=new )([a-zA-Z]+)' $1)

        # For each dependency, recursively add dependencies
        # if file exists
        for d in $DEPS
        do
            FILE="${d}.java"

            if [[ -f $FILE ]]; then
                FILELIST="$FILELIST $FILE"
                get_deps $FILE
            fi
        done


    fi

}

# Gets dependencies not in javalib
# function get_lib_deps {
#
# }

# find file with main function
if [[ $# -eq 0 ]] ; then
    MAINFILE=$(grep -Pl 'main *\(.*\)' *.*)
else
    MAINFILE=$1
fi

FILELIST="$FILELIST $MAINFILE"

if [[ $MAINFILE =~ \.java ]] ; then
    get_deps $MAINFILE

    FILELIST=$(echo $FILELIST | remove_dups)

    # if library
    MAINTEXT=$(cat $MAINFILE)
    if [[ `grep package $MAINFILE` ]] ; then
        PACKAGE=$(grep -Po '(?<=package )([a-zA-Z0-9.]+)' $MAINFILE)
        for p in $(sed -n "s/^.*import.*$PACKAGE.\(.*\);/\1/p" $MAINFILE)
        do
            p=$(echo $p | sed 's/\./\//g')
            FILELIST="$FILELIST ${p}.java"
        done
    fi


    # ADD KATTIS MANUALLY
    FILELIST="$FILELIST ../Kattio.java"
fi

PROBLEM=$(sed -n 's/^.*problem:\([a-zA-Z0-9]*\)/\1/p' $MAINFILE)

if [[ -n $PROBLEM ]]; then
    PROBLEM="-p $PROBLEM"
fi

echo $PROBLEM $FILELIST

kattissubmit $PROBLEM $FILELIST
